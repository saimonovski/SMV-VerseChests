plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'io.github.saimonovski'
version = '1.0- bukkit-1.8-1.20'

repositories {
    mavenCentral()
    maven {
        url 'https://repo.xenondevs.xyz/releases'
    }
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "papermc"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }

    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }


}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20-R0.1-SNAPSHOT")
    //boosted-yaml
    implementation "dev.dejvokep:boosted-yaml:1.3.6"
    implementation 'dev.dejvokep:boosted-yaml-spigot:1.5'
//cloud
    implementation 'org.incendo:cloud-paper:2.0.0-beta.10'
    implementation 'org.incendo:cloud-core:2.0.0'
    implementation 'org.incendo:cloud-annotations:2.0.0'
    implementation 'org.incendo:cloud-minecraft-extras:2.0.0-beta.10'
    //placeholder api
    compileOnly 'me.clip:placeholderapi:2.11.6'
    //invui
    implementation "xyz.xenondevs.invui:invui:1.46"
}

def targetJavaVersion = 20
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}
tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20")
    }
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar{
    relocate 'dev.dejvokep.boostedyaml', 'io.saimonovski.verse.chests.lib'
    relocate("org.incento.cloud", "io.github.saimonovski.verse.chests.lib")
    relocate("xyz.xenodevs.invui","io.github.saimonovski.versechest.lib")
}

